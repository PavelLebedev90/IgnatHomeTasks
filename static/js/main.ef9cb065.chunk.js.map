{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","styled","Header","useState","Message","props","className","classes","message","element_1","img","src","tasks","avatar","element_2","element_2_name","name","element_2_message","element_2_time","time","messageData","HW1","Affair","wrapper","affair","priority","button","pos","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","affairs","setFilter","defaultAffairs","HW2","setAffairs","filter","filteredAffairs","f","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","keyPressAddUser","onFocusHandler","inputClass","s","someClass","value","onChange","onKeyPress","onFocus","GreetingContainer","users","addUserCallback","setName","setError","match","length","alert","e","currentTarget","trim","toLowerCase","HW3","setUsers","newUser","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","disabled","PreJunior","Junior","JuniorPlus","Error404","PATH","RoutesComponent","path","element","HW5","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.ef9cb065.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1Ue-9\",\"element_1\":\"Message_element_1__3ysPM\",\"img\":\"Message_img__29ur5\",\"element_2\":\"Message_element_2__S338i\",\"element_2_name\":\"Message_element_2_name__3IgyH\",\"element_2_time\":\"Message_element_2_time__13Lmy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Affair_wrapper__2z3Wg\",\"button\":\"Affair_button__3MYcu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__1wxLU\",\"wrapper\":\"Affairs_wrapper__1T1ay\",\"button\":\"Affairs_button__1O3dF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2swuh\",\"errorInput\":\"SuperInputText_errorInput__PiSSl\",\"error\":\"SuperInputText_error__2XRFa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1M-c5\",\"column\":\"HW4_column__5CNx3\",\"testSpanError\":\"HW4_testSpanError__13fR1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__lcu_9\",\"error\":\"Greeting_error__Uz3RT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__13-fq\",\"red\":\"SuperButton_red__3-Y4c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2SLwJ\",\"spanClassName\":\"SuperCheckbox_spanClassName__1ovKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2mRe7\"};","import React, {useState} from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Main = styled(\"div\")`\r\n  font-family: sans-serif;\r\n/*  background: #f0f0f0;\r\n  height: 100vh;*/\r\n`;\r\n\r\nconst DropDownContainer = styled(\"div\")`\r\n  width: 10.5em;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst DropDownHeader = styled(\"div\")`\r\n  margin-bottom: 0.8em;\r\n  padding: 0.4em 2em 0.4em 1em;\r\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.15);\r\n  font-weight: 500;\r\n  font-size: 1.3rem;\r\n  color: #3faffa;\r\n  background: #ffffff;\r\n`;\r\n\r\nconst DropDownListContainer = styled(\"div\")``;\r\n\r\nconst DropDownList = styled(\"ul\")`\r\n  padding: 0;\r\n  margin: 0;\r\n  padding-left: 1em;\r\n  background: #ffffff;\r\n  border: 2px solid #e5e5e5;\r\n  box-sizing: border-box;\r\n  color: #3faffa;\r\n  font-size: 1.3rem;\r\n  font-weight: 500;\r\n  &:first-child {\r\n    padding-top: 0.8em;\r\n  }\r\n`;\r\n\r\nconst ListItem = styled(\"li\")`\r\n  list-style: none;\r\n  margin-bottom: 0.8em;\r\n`;\r\n\r\ntype SelectedType = null | string\r\n\r\nconst options = [\"pre-junior\", \"junior\", \"juniorplus\"];\r\nfunction Header() {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [selectedOption, setSelectedOption] = useState<SelectedType>(null);\r\n\r\n    const toggling = () => setIsOpen(!isOpen);\r\n\r\n    const onOptionClicked =  (value: SelectedType) => {\r\n        setSelectedOption(value);\r\n        setIsOpen(false);\r\n        console.log(selectedOption);\r\n    };\r\n\r\n    return (\r\n\r\n\r\n       /*   <span className={classes.NavLink}>\r\n                <NavLink to={'/pre-junior'}>pre-junior </NavLink>\r\n            </span>\r\n            <span className={classes.NavLink}>\r\n                <NavLink to={'/junior'}>junior </NavLink>\r\n            </span>\r\n            <span className={classes.NavLink}>\r\n                <NavLink to={'/juniorplus'}>junior++</NavLink>\r\n            </span>*/\r\n\r\n            <div className=\"App\">\r\n                <Main>\r\n                    <DropDownContainer>\r\n                        <DropDownHeader onClick={toggling}>\r\n                            {selectedOption || \"SelectPage\"}\r\n                        </DropDownHeader>\r\n                        {isOpen && (\r\n                            <DropDownListContainer>\r\n                                <DropDownList>\r\n                                    {options.map(option => (\r\n                                        <ListItem onClick={()=>onOptionClicked(option)} key={Math.random()}>\r\n                                            <NavLink to={`/${option}`}>{option}</NavLink>\r\n                                        </ListItem>\r\n                                    ))}\r\n                                </DropDownList>\r\n                            </DropDownListContainer>\r\n                        )}\r\n                    </DropDownContainer>\r\n                </Main>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport classes from \"./Message.module.css\";\r\n\r\ntype messageDataPropsType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string,\r\n}\r\ntype PropsType = {\r\n    tasks: messageDataPropsType,\r\n}\r\n\r\nexport function Message(props: PropsType) {\r\n    return (\r\n        <div className={classes.message}>\r\n            <div className={classes.element_1}>\r\n\r\n                <img className={classes.img} src={props.tasks.avatar}/>\r\n            </div>\r\n            <div className={classes.element_2}>\r\n                <p className={classes.element_2_name}>{props.tasks.name}</p>\r\n                <p className={classes.element_2_message}>{props.tasks.message}</p>\r\n                <p className={classes.element_2_time}>{props.tasks.time}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {Message} from \"./Message\";\r\n\r\n\r\nconst messageData = {\r\n    avatar:   'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Pavel ',\r\n    message: 'Learning, learning and learning',\r\n    time: '11:00',\r\n}\r\n\r\n\r\n\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n\r\n            <Message\r\n                tasks={messageData}\r\n           /*     avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}*/\r\n            />\r\n\r\n            {/*<hr/>*/}\r\n            {/*/!*для личного творчества, могу проверить*!/*/}\r\n            {/*/!*<AlternativeMessage/>*!/*/}\r\n            {/*<hr/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport classes from './Affair.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n         props.deleteAffairCallback(props.affair._id)\n    };// need to fix\n\n    return (\n        <div className={classes.wrapper}>\n            <div>\n                {`${props.affair.name} ${props.affair.priority}`}\n            </div>\n            <div className={classes.button}>\n                <div className={classes.pos}>\n                <div onClick={deleteCallback}>X</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, deleteAffair, FilterType} from './HW2'\nimport classes from \"./Affairs.module.css\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (value: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter(\"all\")\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter(\"high\")\n    }\n    const setMiddle = () => {\n        props.setFilter(\"middle\")\n    }\n    const setLow = () => {\n        props.setFilter(\"low\")\n    }\n\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.affairs}>\n                {mappedAffairs}\n            </div>\n            <div className={classes.button}>\n                <div onClick={setAll}>All</div>\n                <div onClick={setHigh}>High</div>\n                <div onClick={setMiddle}>Middle</div>\n                <div onClick={setLow}>Low</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle'// need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n}// need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\nif(filter === \"all\"){\n     return  affairs;\n}else{\n    return  affairs.filter((f) => f.priority === filter )\n}\n\n}\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter((f) => f._id !== _id)\n     // need to fix\n}\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType> >(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number):void => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent,KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n    keyPressAddUser: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    onFocusHandler: () => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers,keyPressAddUser, onFocusHandler} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error? s.error: s.someClass; // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <input value={name}\r\n                   onChange={setNameCallback}\r\n                   onKeyPress={keyPressAddUser}\r\n                   onFocus={onFocusHandler}\r\n                   className={inputClass}/>\r\n            <span>{error}</span>\r\n            <button onClick={addUser}>add</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value.trim().toLowerCase());\r\n        setError(\"\");\r\n    }\r\n\r\n    const addUser = () => {\r\n        if (name.match(/\\d/)) {\r\n            setName(\"\");\r\n            return setError(\"name cannot contain numbers\");\r\n        }\r\n\r\n        if (name.length === 0) {\r\n            return setError(\"Enter correct name\");\r\n        }\r\n\r\n\r\n        alert(`Hello ${name}!`);\r\n        addUserCallback(name);\r\n        setName(\"\");\r\n    }\r\n\r\n\r\n    const keyPressAddUser = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key == \"Enter\") {\r\n            addUser();\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length; // need to fix\r\n\r\n    const onFocusHandler = () => {\r\n        setError(\"\");\r\n    }\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            keyPressAddUser={keyPressAddUser}\r\n            onFocusHandler={onFocusHandler}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => {\r\n        let newUser = {_id: v1(), name: name};// need to fix any\r\n        setUsers([newUser, ...users]); // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e)// то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${className ? className: s.superInput }` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        if(onChangeChecked){\r\n            onChangeChecked(e.currentTarget.checked)\r\n        }else if(onChange){\r\n            onChange(e);\r\n        }\r\n\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text)\r\n            setText(\"\")// если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        setChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    clear and simple code from Ignat {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox onChange={testOnChange}>\r\n                    What the fuck. I'm only on stage \"Monday\"\r\n                </SuperCheckbox>\r\n\r\n\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз\r\n\r\n","import React from 'react';\r\n\r\nconst Junior = () => {\r\n    return (\r\n        <div>\r\n            Junior\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Junior;","import React from 'react';\r\n\r\nconst JuniorPlus = () => {\r\n    return (\r\n        <div>\r\n            JuniorPlus\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JuniorPlus;","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\nimport {Route, Routes} from 'react-router-dom';\r\nimport PreJunior from './pages/PreJunior';\r\nimport Junior from './pages/Junior';\r\nimport JuniorPlus from './pages/JuniorPlus';\r\nimport Error404 from './pages/Error404';\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIORPLUS: '/juniorplus'\r\n\r\n}\r\n\r\nexport function RoutesComponent() {\r\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\r\n                <Route path={PATH.JUNIORPLUS} element={<JuniorPlus/>}/>\r\n                <Route path={'/*'} element={<Error404/>}/>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport  {RoutesComponent} from './Routes'\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            <BrowserRouter>\r\n                <Header/>\r\n                <RoutesComponent/>\r\n            </BrowserRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW5 from '../../../p2-homeworks/h5/HW5';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <HW5/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}